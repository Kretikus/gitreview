From a1848f531bc864cc820fa0211da682ed69880384 Mon Sep 17 00:00:00 2001
From: Roman Himmes <himmes@idev.de>
Date: Wed, 1 Aug 2018 23:01:26 +0200
Subject: [PATCH] Added commit controller that lists all commits

---
 Gemfile                                       |  4 +
 Gemfile.lock                                  | 13 +++
 app/assets/javascripts/commits.coffee         |  3 +
 app/assets/stylesheets/commits.scss           |  3 +
 app/assets/stylesheets/scaffolds.scss         | 84 ++++++++++++++++++
 app/controllers/commits_controller.rb         | 85 +++++++++++++++++++
 app/helpers/commits_helper.rb                 |  2 +
 app/models/commit.rb                          |  5 ++
 app/views/commits/_commit.json.jbuilder       |  2 +
 app/views/commits/_form.html.erb              | 37 ++++++++
 app/views/commits/edit.html.erb               |  6 ++
 app/views/commits/index.html.erb              | 33 +++++++
 app/views/commits/index.json.jbuilder         |  1 +
 app/views/commits/new.html.erb                |  5 ++
 app/views/commits/show.html.erb               | 24 ++++++
 app/views/commits/show.json.jbuilder          |  1 +
 config/routes.rb                              |  1 +
 db/migrate/20180801193445_create_commits.rb   | 12 +++
 ...20180801205018_add_index_to_commits_sha.rb |  5 ++
 db/schema.rb                                  | 25 ++++++
 test/controllers/commits_controller_test.rb   | 48 +++++++++++
 test/fixtures/commits.yml                     | 13 +++
 test/models/commit_test.rb                    |  7 ++
 test/system/commits_test.rb                   | 49 +++++++++++
 24 files changed, 468 insertions(+)
 create mode 100644 app/assets/javascripts/commits.coffee
 create mode 100644 app/assets/stylesheets/commits.scss
 create mode 100644 app/assets/stylesheets/scaffolds.scss
 create mode 100644 app/controllers/commits_controller.rb
 create mode 100644 app/helpers/commits_helper.rb
 create mode 100644 app/models/commit.rb
 create mode 100644 app/views/commits/_commit.json.jbuilder
 create mode 100644 app/views/commits/_form.html.erb
 create mode 100644 app/views/commits/edit.html.erb
 create mode 100644 app/views/commits/index.html.erb
 create mode 100644 app/views/commits/index.json.jbuilder
 create mode 100644 app/views/commits/new.html.erb
 create mode 100644 app/views/commits/show.html.erb
 create mode 100644 app/views/commits/show.json.jbuilder
 create mode 100644 db/migrate/20180801193445_create_commits.rb
 create mode 100644 db/migrate/20180801205018_add_index_to_commits_sha.rb
 create mode 100644 db/schema.rb
 create mode 100644 test/controllers/commits_controller_test.rb
 create mode 100644 test/fixtures/commits.yml
 create mode 100644 test/models/commit_test.rb
 create mode 100644 test/system/commits_test.rb

diff --git a/Gemfile b/Gemfile
index e9d3555..89304fd 100644
--- a/Gemfile
+++ b/Gemfile
@@ -3,6 +3,10 @@ git_source(:github) { |repo| "https://github.com/#{repo}.git" }
 
 ruby '2.3.7'
 
+gem 'bootstrap-sass'
+gem 'jquery-rails'
+gem 'rugged'
+
 # Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
 gem 'rails', '~> 5.2.0'
 # Use sqlite3 as the database for Active Record
diff --git a/Gemfile.lock b/Gemfile.lock
index 874deb9..09bdd4c 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -47,9 +47,14 @@ GEM
     archive-zip (0.11.0)
       io-like (~> 0.3.0)
     arel (9.0.0)
+    autoprefixer-rails (9.0.2)
+      execjs
     bindex (0.5.0)
     bootsnap (1.3.1)
       msgpack (~> 1.0)
+    bootstrap-sass (3.3.7)
+      autoprefixer-rails (>= 5.2.1)
+      sass (>= 3.3.4)
     builder (3.2.3)
     byebug (10.0.2)
     capybara (3.4.2)
@@ -84,6 +89,10 @@ GEM
     jbuilder (2.7.0)
       activesupport (>= 4.2.0)
       multi_json (>= 1.2)
+    jquery-rails (4.3.3)
+      rails-dom-testing (>= 1, < 3)
+      railties (>= 4.2.0)
+      thor (>= 0.14, < 2.0)
     listen (3.1.5)
       rb-fsevent (~> 0.9, >= 0.9.4)
       rb-inotify (~> 0.9, >= 0.9.7)
@@ -140,6 +149,7 @@ GEM
       ffi (>= 0.5.0, < 2)
     ruby_dep (1.5.0)
     rubyzip (1.2.1)
+    rugged (0.27.2)
     sass (3.5.7)
       sass-listen (~> 4.0.0)
     sass-listen (4.0.0)
@@ -193,14 +203,17 @@ PLATFORMS
 
 DEPENDENCIES
   bootsnap (>= 1.1.0)
+  bootstrap-sass
   byebug
   capybara (>= 2.15, < 4.0)
   chromedriver-helper
   coffee-rails (~> 4.2)
   jbuilder (~> 2.5)
+  jquery-rails
   listen (>= 3.0.5, < 3.2)
   puma (~> 3.11)
   rails (~> 5.2.0)
+  rugged
   sass-rails (~> 5.0)
   selenium-webdriver
   spring
diff --git a/app/assets/javascripts/commits.coffee b/app/assets/javascripts/commits.coffee
new file mode 100644
index 0000000..24f83d1
--- /dev/null
+++ b/app/assets/javascripts/commits.coffee
@@ -0,0 +1,3 @@
+# Place all the behaviors and hooks related to the matching controller here.
+# All this logic will automatically be available in application.js.
+# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/app/assets/stylesheets/commits.scss b/app/assets/stylesheets/commits.scss
new file mode 100644
index 0000000..9c1d573
--- /dev/null
+++ b/app/assets/stylesheets/commits.scss
@@ -0,0 +1,3 @@
+// Place all the styles related to the Commits controller here.
+// They will automatically be included in application.css.
+// You can use Sass (SCSS) here: http://sass-lang.com/
diff --git a/app/assets/stylesheets/scaffolds.scss b/app/assets/stylesheets/scaffolds.scss
new file mode 100644
index 0000000..6045188
--- /dev/null
+++ b/app/assets/stylesheets/scaffolds.scss
@@ -0,0 +1,84 @@
+body {
+  background-color: #fff;
+  color: #333;
+  margin: 33px;
+  font-family: verdana, arial, helvetica, sans-serif;
+  font-size: 13px;
+  line-height: 18px;
+}
+
+p, ol, ul, td {
+  font-family: verdana, arial, helvetica, sans-serif;
+  font-size: 13px;
+  line-height: 18px;
+}
+
+pre {
+  background-color: #eee;
+  padding: 10px;
+  font-size: 11px;
+}
+
+a {
+  color: #000;
+
+  &:visited {
+    color: #666;
+  }
+
+  &:hover {
+    color: #fff;
+    background-color: #000;
+  }
+}
+
+th {
+  padding-bottom: 5px;
+}
+
+td {
+  padding: 0 5px 7px;
+}
+
+div {
+  &.field, &.actions {
+    margin-bottom: 10px;
+  }
+}
+
+#notice {
+  color: green;
+}
+
+.field_with_errors {
+  padding: 2px;
+  background-color: red;
+  display: table;
+}
+
+#error_explanation {
+  width: 450px;
+  border: 2px solid red;
+  padding: 7px 7px 0;
+  margin-bottom: 20px;
+  background-color: #f0f0f0;
+
+  h2 {
+    text-align: left;
+    font-weight: bold;
+    padding: 5px 5px 5px 15px;
+    font-size: 12px;
+    margin: -7px -7px 0;
+    background-color: #c00;
+    color: #fff;
+  }
+
+  ul li {
+    font-size: 12px;
+    list-style: square;
+  }
+}
+
+label {
+  display: block;
+}
diff --git a/app/controllers/commits_controller.rb b/app/controllers/commits_controller.rb
new file mode 100644
index 0000000..de526e2
--- /dev/null
+++ b/app/controllers/commits_controller.rb
@@ -0,0 +1,85 @@
+require 'rugged'
+
+class CommitsController < ApplicationController
+  before_action :set_commit, only: [:show, :edit, :update, :destroy]
+
+  # GET /commits
+  # GET /commits.json
+  def index
+    @commits = Commit.all
+  end
+
+  # GET /commits/1
+  # GET /commits/1.json
+  def show
+  end
+
+  # GET /commits/new
+  def new
+    @commit = Commit.new
+  end
+
+  # GET /commits/1/edit
+  def edit
+  end
+
+  # POST /commits
+  # POST /commits.json
+  def create
+    @commit = Commit.new
+
+#    repo = Rugged::Repository.new('/Users/roman/rails/ZBar')
+#
+#    walker = Rugged::Walker.new(repo)
+#
+#    walker.sorting(Rugged::SORT_TOPO | Rugged::SORT_REVERSE) # optional
+#
+#    walker.push('HEAD')
+#    walker.each { |c| 
+#      @commit = Commit.new(sha: c.oid, description:c.message,
+#                           author: c.author[:name], commit_date: c.author[:time])
+#      @commit.save
+#    }
+#    walker.reset
+
+    respond_to do |format|
+        format.html { redirect_to @commit, notice: 'Commit was successfully created.' }
+        format.json { render :show, status: :created, location: @commit }
+    end
+  end
+
+  # PATCH/PUT /commits/1
+  # PATCH/PUT /commits/1.json
+  def update
+    respond_to do |format|
+      if @commit.update(commit_params)
+        format.html { redirect_to @commit, notice: 'Commit was successfully updated.' }
+        format.json { render :show, status: :ok, location: @commit }
+      else
+        format.html { render :edit }
+        format.json { render json: @commit.errors, status: :unprocessable_entity }
+      end
+    end
+  end
+
+  # DELETE /commits/1
+  # DELETE /commits/1.json
+  def destroy
+    @commit.destroy
+    respond_to do |format|
+      format.html { redirect_to commits_url, notice: 'Commit was successfully destroyed.' }
+      format.json { head :no_content }
+    end
+  end
+
+  private
+    # Use callbacks to share common setup or constraints between actions.
+    def set_commit
+      @commit = Commit.find_by_sha(params[:sha])
+    end
+
+    # Never trust parameters from the scary internet, only allow the white list through.
+    def commit_params
+      params.require(:commit).permit(:sha, :description, :author, :commit_date)
+    end
+end
diff --git a/app/helpers/commits_helper.rb b/app/helpers/commits_helper.rb
new file mode 100644
index 0000000..60b037d
--- /dev/null
+++ b/app/helpers/commits_helper.rb
@@ -0,0 +1,2 @@
+module CommitsHelper
+end
diff --git a/app/models/commit.rb b/app/models/commit.rb
new file mode 100644
index 0000000..491c6a6
--- /dev/null
+++ b/app/models/commit.rb
@@ -0,0 +1,5 @@
+class Commit < ApplicationRecord
+  def to_param
+    sha
+  end
+end
diff --git a/app/views/commits/_commit.json.jbuilder b/app/views/commits/_commit.json.jbuilder
new file mode 100644
index 0000000..40a050f
--- /dev/null
+++ b/app/views/commits/_commit.json.jbuilder
@@ -0,0 +1,2 @@
+json.extract! commit, :id, :sha, :description, :author, :commit_date, :created_at, :updated_at
+json.url commit_url(commit, format: :json)
diff --git a/app/views/commits/_form.html.erb b/app/views/commits/_form.html.erb
new file mode 100644
index 0000000..b3976aa
--- /dev/null
+++ b/app/views/commits/_form.html.erb
@@ -0,0 +1,37 @@
+<%= form_with(model: commit, local: true) do |form| %>
+  <% if commit.errors.any? %>
+    <div id="error_explanation">
+      <h2><%= pluralize(commit.errors.count, "error") %> prohibited this commit from being saved:</h2>
+
+      <ul>
+      <% commit.errors.full_messages.each do |message| %>
+        <li><%= message %></li>
+      <% end %>
+      </ul>
+    </div>
+  <% end %>
+
+  <div class="field">
+    <%= form.label :sha %>
+    <%= form.text_field :sha %>
+  </div>
+
+  <div class="field">
+    <%= form.label :description %>
+    <%= form.text_field :description %>
+  </div>
+
+  <div class="field">
+    <%= form.label :author %>
+    <%= form.text_field :author %>
+  </div>
+
+  <div class="field">
+    <%= form.label :commit_date %>
+    <%= form.datetime_select :commit_date %>
+  </div>
+
+  <div class="actions">
+    <%= form.submit %>
+  </div>
+<% end %>
diff --git a/app/views/commits/edit.html.erb b/app/views/commits/edit.html.erb
new file mode 100644
index 0000000..d85417e
--- /dev/null
+++ b/app/views/commits/edit.html.erb
@@ -0,0 +1,6 @@
+<h1>Editing Commit</h1>
+
+<%= render 'form', commit: @commit %>
+
+<%= link_to 'Show', @commit %> |
+<%= link_to 'Back', commits_path %>
diff --git a/app/views/commits/index.html.erb b/app/views/commits/index.html.erb
new file mode 100644
index 0000000..59b2552
--- /dev/null
+++ b/app/views/commits/index.html.erb
@@ -0,0 +1,33 @@
+<p id="notice"><%= notice %></p>
+
+<h1>Commits</h1>
+
+<table>
+  <thead>
+    <tr>
+      <th>Sha</th>
+      <th>Description</th>
+      <th>Author</th>
+      <th>Commit date</th>
+      <th colspan="3"></th>
+    </tr>
+  </thead>
+
+  <tbody>
+    <% @commits.each do |commit| %>
+      <tr>
+        <td><%= commit.sha %></td>
+        <td><%= commit.description %></td>
+        <td><%= commit.author %></td>
+        <td><%= commit.commit_date %></td>
+        <td><%= link_to 'Show', commit %></td>
+        <td><%= link_to 'Edit', edit_commit_path(commit) %></td>
+        <td><%= link_to 'Destroy', commit, method: :delete, data: { confirm: 'Are you sure?' } %></td>
+      </tr>
+    <% end %>
+  </tbody>
+</table>
+
+<br>
+
+<%= link_to 'New Commit', new_commit_path %>
diff --git a/app/views/commits/index.json.jbuilder b/app/views/commits/index.json.jbuilder
new file mode 100644
index 0000000..ca378d2
--- /dev/null
+++ b/app/views/commits/index.json.jbuilder
@@ -0,0 +1 @@
+json.array! @commits, partial: 'commits/commit', as: :commit
diff --git a/app/views/commits/new.html.erb b/app/views/commits/new.html.erb
new file mode 100644
index 0000000..8e60189
--- /dev/null
+++ b/app/views/commits/new.html.erb
@@ -0,0 +1,5 @@
+<h1>New Commit</h1>
+
+<%= render 'form', commit: @commit %>
+
+<%= link_to 'Back', commits_path %>
diff --git a/app/views/commits/show.html.erb b/app/views/commits/show.html.erb
new file mode 100644
index 0000000..f9590b2
--- /dev/null
+++ b/app/views/commits/show.html.erb
@@ -0,0 +1,24 @@
+<p id="notice"><%= notice %></p>
+
+<p>
+  <strong>Sha:</strong>
+  <%= @commit.sha %>
+</p>
+
+<p>
+  <strong>Description:</strong>
+  <%= @commit.description %>
+</p>
+
+<p>
+  <strong>Author:</strong>
+  <%= @commit.author %>
+</p>
+
+<p>
+  <strong>Commit date:</strong>
+  <%= @commit.commit_date %>
+</p>
+
+<%= link_to 'Edit', edit_commit_path(@commit) %> |
+<%= link_to 'Back', commits_path %>
diff --git a/app/views/commits/show.json.jbuilder b/app/views/commits/show.json.jbuilder
new file mode 100644
index 0000000..8883230
--- /dev/null
+++ b/app/views/commits/show.json.jbuilder
@@ -0,0 +1 @@
+json.partial! "commits/commit", commit: @commit
diff --git a/config/routes.rb b/config/routes.rb
index 787824f..b893718 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -1,3 +1,4 @@
 Rails.application.routes.draw do
+  resources :commits, param: :sha
   # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
 end
diff --git a/db/migrate/20180801193445_create_commits.rb b/db/migrate/20180801193445_create_commits.rb
new file mode 100644
index 0000000..7c22e3c
--- /dev/null
+++ b/db/migrate/20180801193445_create_commits.rb
@@ -0,0 +1,12 @@
+class CreateCommits < ActiveRecord::Migration[5.2]
+  def change
+    create_table :commits do |t|
+      t.string :sha
+      t.string :description
+      t.string :author
+      t.datetime :commit_date
+
+      t.timestamps
+    end
+  end
+end
diff --git a/db/migrate/20180801205018_add_index_to_commits_sha.rb b/db/migrate/20180801205018_add_index_to_commits_sha.rb
new file mode 100644
index 0000000..78e5ee5
--- /dev/null
+++ b/db/migrate/20180801205018_add_index_to_commits_sha.rb
@@ -0,0 +1,5 @@
+class AddIndexToCommitsSha < ActiveRecord::Migration[5.2]
+  def change
+	add_index :commits, :sha, unique: true
+  end
+end
diff --git a/db/schema.rb b/db/schema.rb
new file mode 100644
index 0000000..df42ce2
--- /dev/null
+++ b/db/schema.rb
@@ -0,0 +1,25 @@
+# This file is auto-generated from the current state of the database. Instead
+# of editing this file, please use the migrations feature of Active Record to
+# incrementally modify your database, and then regenerate this schema definition.
+#
+# Note that this schema.rb definition is the authoritative source for your
+# database schema. If you need to create the application database on another
+# system, you should be using db:schema:load, not running all the migrations
+# from scratch. The latter is a flawed and unsustainable approach (the more migrations
+# you'll amass, the slower it'll run and the greater likelihood for issues).
+#
+# It's strongly recommended that you check this file into your version control system.
+
+ActiveRecord::Schema.define(version: 2018_08_01_205018) do
+
+  create_table "commits", force: :cascade do |t|
+    t.string "sha"
+    t.string "description"
+    t.string "author"
+    t.datetime "commit_date"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+    t.index ["sha"], name: "index_commits_on_sha", unique: true
+  end
+
+end
diff --git a/test/controllers/commits_controller_test.rb b/test/controllers/commits_controller_test.rb
new file mode 100644
index 0000000..22fc19b
--- /dev/null
+++ b/test/controllers/commits_controller_test.rb
@@ -0,0 +1,48 @@
+require 'test_helper'
+
+class CommitsControllerTest < ActionDispatch::IntegrationTest
+  setup do
+    @commit = commits(:one)
+  end
+
+  test "should get index" do
+    get commits_url
+    assert_response :success
+  end
+
+  test "should get new" do
+    get new_commit_url
+    assert_response :success
+  end
+
+  test "should create commit" do
+    assert_difference('Commit.count') do
+      post commits_url, params: { commit: { author: @commit.author, commit_date: @commit.commit_date, description: @commit.description, sha: @commit.sha } }
+    end
+
+    assert_redirected_to commit_url(Commit.last)
+  end
+
+  test "should show commit" do
+    get commit_url(@commit)
+    assert_response :success
+  end
+
+  test "should get edit" do
+    get edit_commit_url(@commit)
+    assert_response :success
+  end
+
+  test "should update commit" do
+    patch commit_url(@commit), params: { commit: { author: @commit.author, commit_date: @commit.commit_date, description: @commit.description, sha: @commit.sha } }
+    assert_redirected_to commit_url(@commit)
+  end
+
+  test "should destroy commit" do
+    assert_difference('Commit.count', -1) do
+      delete commit_url(@commit)
+    end
+
+    assert_redirected_to commits_url
+  end
+end
diff --git a/test/fixtures/commits.yml b/test/fixtures/commits.yml
new file mode 100644
index 0000000..d352d66
--- /dev/null
+++ b/test/fixtures/commits.yml
@@ -0,0 +1,13 @@
+# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+one:
+  sha: MyString
+  description: MyString
+  author: MyString
+  commit_date: 2018-08-01 21:34:45
+
+two:
+  sha: MyString
+  description: MyString
+  author: MyString
+  commit_date: 2018-08-01 21:34:45
diff --git a/test/models/commit_test.rb b/test/models/commit_test.rb
new file mode 100644
index 0000000..2424af3
--- /dev/null
+++ b/test/models/commit_test.rb
@@ -0,0 +1,7 @@
+require 'test_helper'
+
+class CommitTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
diff --git a/test/system/commits_test.rb b/test/system/commits_test.rb
new file mode 100644
index 0000000..8bdcc32
--- /dev/null
+++ b/test/system/commits_test.rb
@@ -0,0 +1,49 @@
+require "application_system_test_case"
+
+class CommitsTest < ApplicationSystemTestCase
+  setup do
+    @commit = commits(:one)
+  end
+
+  test "visiting the index" do
+    visit commits_url
+    assert_selector "h1", text: "Commits"
+  end
+
+  test "creating a Commit" do
+    visit commits_url
+    click_on "New Commit"
+
+    fill_in "Author", with: @commit.author
+    fill_in "Commit Date", with: @commit.commit_date
+    fill_in "Description", with: @commit.description
+    fill_in "Sha", with: @commit.sha
+    click_on "Create Commit"
+
+    assert_text "Commit was successfully created"
+    click_on "Back"
+  end
+
+  test "updating a Commit" do
+    visit commits_url
+    click_on "Edit", match: :first
+
+    fill_in "Author", with: @commit.author
+    fill_in "Commit Date", with: @commit.commit_date
+    fill_in "Description", with: @commit.description
+    fill_in "Sha", with: @commit.sha
+    click_on "Update Commit"
+
+    assert_text "Commit was successfully updated"
+    click_on "Back"
+  end
+
+  test "destroying a Commit" do
+    visit commits_url
+    page.accept_confirm do
+      click_on "Destroy", match: :first
+    end
+
+    assert_text "Commit was successfully destroyed"
+  end
+end
-- 
2.18.0

